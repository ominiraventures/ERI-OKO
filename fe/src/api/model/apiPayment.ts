/*
 * Copyright(c) 2009 - 2019 Abelium d.o.o.
 * Kajuhova 90, 1000 Ljubljana, Slovenia
 * All rights reserved
 * Copyright(c) 1995 - 2018 T-Systems Multimedia Solutions GmbH
 * Riesaer Str. 5, 01129 Dresden
 * All rights reserved.
 *
 * INATrace Services API
 * INATrace Services API OpenAPI documentation
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the openapi-typescript-angular-generator.
 * https://github.com/alenabelium/openapi-typescript-angular-generator
 * Do not edit the class manually.
 */


import { ApiCompany } from './apiCompany';
import { ApiCompanyBase } from './apiCompanyBase';
import { ApiDocument } from './apiDocument';
import { ApiStockOrder } from './apiStockOrder';
import { ApiUser } from './apiUser';
import { ApiUserCustomer } from './apiUserCustomer';


/**
 * Payments for stock order
 */

export interface ApiPayment { 
    /**
     * Entity id
     */
    id?: number;
    /**
     * Last updated timestamp
     */
    updatedTimestamp?: Date;
    createdBy?: ApiUser;
    updatedBy?: ApiUser;
    /**
     * Payment type
     */
    paymentType?: ApiPayment.PaymentTypeEnum;
    /**
     * Payment's currency
     */
    currency?: string;
    /**
     * Quantity purchased to be paid
     */
    purchased?: number;
    /**
     * Payment amount paid (to a farmer or recipient company)
     */
    amount?: number;
    /**
     * Payment amount paid to the collector
     */
    amountPaidToTheCollector?: number;
    /**
     * Payment total amount
     */
    totalPaid?: number;
    stockOrder?: ApiStockOrder;
    /**
     * Recipient type
     */
    recipientType?: ApiPayment.RecipientTypeEnum;
    /**
     * Receipt number
     */
    receiptNumber?: string;
    receiptDocument?: ApiDocument;
    /**
     * Receipt document type
     */
    receiptDocumentType?: ApiPayment.ReceiptDocumentTypeEnum;
    /**
     * Payment purpose type
     */
    paymentPurposeType?: ApiPayment.PaymentPurposeTypeEnum;
    /**
     * Payment status
     */
    paymentStatus?: ApiPayment.PaymentStatusEnum;
    paymentConfirmedByUser?: ApiUser;
    /**
     * Payment time confirmation
     */
    paymentConfirmedAtTime?: Date;
    /**
     * Formal creation date (for example: date on receipt)
     */
    formalCreationTime?: string;
    /**
     * Preferred way of payment
     */
    preferredWayOfPayment?: ApiPayment.PreferredWayOfPaymentEnum;
    /**
     * Production date
     */
    productionDate?: string;
    payingCompany?: ApiCompany;
    recipientCompany?: ApiCompanyBase;
    recipientUserCustomer?: ApiUserCustomer;
    representativeOfRecipientUserCustomer?: ApiUserCustomer;
}

/**
 * Namespace for property- and property-value-enumerations of ApiPayment.
 */
export namespace ApiPayment {
    /**
     * All properties of ApiPayment.
     */
    export enum Properties {
        /**
         * Entity id
         */
        id = 'id',
        /**
         * Last updated timestamp
         */
        updatedTimestamp = 'updatedTimestamp',
        createdBy = 'createdBy',
        updatedBy = 'updatedBy',
        /**
         * Payment type
         */
        paymentType = 'paymentType',
        /**
         * Payment's currency
         */
        currency = 'currency',
        /**
         * Quantity purchased to be paid
         */
        purchased = 'purchased',
        /**
         * Payment amount paid (to a farmer or recipient company)
         */
        amount = 'amount',
        /**
         * Payment amount paid to the collector
         */
        amountPaidToTheCollector = 'amountPaidToTheCollector',
        /**
         * Payment total amount
         */
        totalPaid = 'totalPaid',
        stockOrder = 'stockOrder',
        /**
         * Recipient type
         */
        recipientType = 'recipientType',
        /**
         * Receipt number
         */
        receiptNumber = 'receiptNumber',
        receiptDocument = 'receiptDocument',
        /**
         * Receipt document type
         */
        receiptDocumentType = 'receiptDocumentType',
        /**
         * Payment purpose type
         */
        paymentPurposeType = 'paymentPurposeType',
        /**
         * Payment status
         */
        paymentStatus = 'paymentStatus',
        paymentConfirmedByUser = 'paymentConfirmedByUser',
        /**
         * Payment time confirmation
         */
        paymentConfirmedAtTime = 'paymentConfirmedAtTime',
        /**
         * Formal creation date (for example: date on receipt)
         */
        formalCreationTime = 'formalCreationTime',
        /**
         * Preferred way of payment
         */
        preferredWayOfPayment = 'preferredWayOfPayment',
        /**
         * Production date
         */
        productionDate = 'productionDate',
        payingCompany = 'payingCompany',
        recipientCompany = 'recipientCompany',
        recipientUserCustomer = 'recipientUserCustomer',
        representativeOfRecipientUserCustomer = 'representativeOfRecipientUserCustomer'
    }

    /**
     * All possible values of paymentType.
     */
    export enum PaymentTypeEnum {
        CASH = 'CASH',
        CASHVIACOLLECTOR = 'CASH_VIA_COLLECTOR',
        BANKTRANSFER = 'BANK_TRANSFER',
        CHEQUE = 'CHEQUE',
        OFFSETTING = 'OFFSETTING'
    }

    /**
     * All possible values of recipientType.
     */
    export enum RecipientTypeEnum {
        COMPANY = 'COMPANY',
        USERCUSTOMER = 'USER_CUSTOMER'
    }

    /**
     * All possible values of receiptDocumentType.
     */
    export enum ReceiptDocumentTypeEnum {
        PURCHASESHEET = 'PURCHASE_SHEET',
        RECEIPT = 'RECEIPT'
    }

    /**
     * All possible values of paymentPurposeType.
     */
    export enum PaymentPurposeTypeEnum {
        ADVANCEPAYMENT = 'ADVANCE_PAYMENT',
        FIRSTINSTALLMENT = 'FIRST_INSTALLMENT',
        SECONDINSTALLMENT = 'SECOND_INSTALLMENT',
        WOMENPREMIUM = 'WOMEN_PREMIUM',
        INVOICEPAYMENT = 'INVOICE_PAYMENT'
    }

    /**
     * All possible values of paymentStatus.
     */
    export enum PaymentStatusEnum {
        UNCONFIRMED = 'UNCONFIRMED',
        CONFIRMED = 'CONFIRMED'
    }

    /**
     * All possible values of preferredWayOfPayment.
     */
    export enum PreferredWayOfPaymentEnum {
        CASH = 'CASH',
        CASHVIACOLLECTOR = 'CASH_VIA_COLLECTOR',
        BANKTRANSFER = 'BANK_TRANSFER',
        CHEQUE = 'CHEQUE',
        OFFSETTING = 'OFFSETTING',
        UNKNOWN = 'UNKNOWN'
    }


    export function formMetadata() {
        return  {
            metadata: formMetadata,
            classname: 'ApiPayment',
            vars: [
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'id',
                    classname: 'ApiPayment',
                    dataType: 'number',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'updatedTimestamp',
                    classname: 'ApiPayment',
                    dataType: 'Date',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    metadata: ApiUser.formMetadata,
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'createdBy',
                    classname: 'ApiPayment',
                    dataType: 'ApiUser',
                    isPrimitiveType: false,
                    isListContainer: false,
                    complexType: 'ApiUser'
                },
                {
                    metadata: ApiUser.formMetadata,
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'updatedBy',
                    classname: 'ApiPayment',
                    dataType: 'ApiUser',
                    isPrimitiveType: false,
                    isListContainer: false,
                    complexType: 'ApiUser'
                },
                {
                    isReadOnly: false,
                    isEnum: true,
                    datatypeWithEnum: 'ApiPayment.PaymentTypeEnum',
                    required: false,
                    name: 'paymentType',
                    classname: 'ApiPayment',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'currency',
                    classname: 'ApiPayment',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'purchased',
                    classname: 'ApiPayment',
                    dataType: 'number',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'amount',
                    classname: 'ApiPayment',
                    dataType: 'number',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'amountPaidToTheCollector',
                    classname: 'ApiPayment',
                    dataType: 'number',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'totalPaid',
                    classname: 'ApiPayment',
                    dataType: 'number',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    metadata: ApiStockOrder.formMetadata,
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'stockOrder',
                    classname: 'ApiPayment',
                    dataType: 'ApiStockOrder',
                    isPrimitiveType: false,
                    isListContainer: false,
                    complexType: 'ApiStockOrder'
                },
                {
                    isReadOnly: false,
                    isEnum: true,
                    datatypeWithEnum: 'ApiPayment.RecipientTypeEnum',
                    required: false,
                    name: 'recipientType',
                    classname: 'ApiPayment',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'receiptNumber',
                    classname: 'ApiPayment',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    metadata: ApiDocument.formMetadata,
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'receiptDocument',
                    classname: 'ApiPayment',
                    dataType: 'ApiDocument',
                    isPrimitiveType: false,
                    isListContainer: false,
                    complexType: 'ApiDocument'
                },
                {
                    isReadOnly: false,
                    isEnum: true,
                    datatypeWithEnum: 'ApiPayment.ReceiptDocumentTypeEnum',
                    required: false,
                    name: 'receiptDocumentType',
                    classname: 'ApiPayment',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: true,
                    datatypeWithEnum: 'ApiPayment.PaymentPurposeTypeEnum',
                    required: false,
                    name: 'paymentPurposeType',
                    classname: 'ApiPayment',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: true,
                    datatypeWithEnum: 'ApiPayment.PaymentStatusEnum',
                    required: false,
                    name: 'paymentStatus',
                    classname: 'ApiPayment',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    metadata: ApiUser.formMetadata,
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'paymentConfirmedByUser',
                    classname: 'ApiPayment',
                    dataType: 'ApiUser',
                    isPrimitiveType: false,
                    isListContainer: false,
                    complexType: 'ApiUser'
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'paymentConfirmedAtTime',
                    classname: 'ApiPayment',
                    dataType: 'Date',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'formalCreationTime',
                    classname: 'ApiPayment',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: true,
                    datatypeWithEnum: 'ApiPayment.PreferredWayOfPaymentEnum',
                    required: false,
                    name: 'preferredWayOfPayment',
                    classname: 'ApiPayment',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'productionDate',
                    classname: 'ApiPayment',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    metadata: ApiCompany.formMetadata,
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'payingCompany',
                    classname: 'ApiPayment',
                    dataType: 'ApiCompany',
                    isPrimitiveType: false,
                    isListContainer: false,
                    complexType: 'ApiCompany'
                },
                {
                    metadata: ApiCompanyBase.formMetadata,
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'recipientCompany',
                    classname: 'ApiPayment',
                    dataType: 'ApiCompanyBase',
                    isPrimitiveType: false,
                    isListContainer: false,
                    complexType: 'ApiCompanyBase'
                },
                {
                    metadata: ApiUserCustomer.formMetadata,
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'recipientUserCustomer',
                    classname: 'ApiPayment',
                    dataType: 'ApiUserCustomer',
                    isPrimitiveType: false,
                    isListContainer: false,
                    complexType: 'ApiUserCustomer'
                },
                {
                    metadata: ApiUserCustomer.formMetadata,
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'representativeOfRecipientUserCustomer',
                    classname: 'ApiPayment',
                    dataType: 'ApiUserCustomer',
                    isPrimitiveType: false,
                    isListContainer: false,
                    complexType: 'ApiUserCustomer'
                },
            ],
            validators: {
                id: [
                ],
                updatedTimestamp: [
                ],
                createdBy: [
                ],
                updatedBy: [
                ],
                paymentType: [
                ],
                currency: [
                ],
                purchased: [
                ],
                amount: [
                ],
                amountPaidToTheCollector: [
                ],
                totalPaid: [
                ],
                stockOrder: [
                ],
                recipientType: [
                ],
                receiptNumber: [
                ],
                receiptDocument: [
                ],
                receiptDocumentType: [
                ],
                paymentPurposeType: [
                ],
                paymentStatus: [
                ],
                paymentConfirmedByUser: [
                ],
                paymentConfirmedAtTime: [
                ],
                formalCreationTime: [
                ],
                preferredWayOfPayment: [
                ],
                productionDate: [
                ],
                payingCompany: [
                ],
                recipientCompany: [
                ],
                recipientUserCustomer: [
                ],
                representativeOfRecipientUserCustomer: [
                ],
            }
        }
    }

  // export const ApiPaymentValidationScheme = {
  //     validators: [],
  //     fields: {
  //               id: {
  //                   validators: []
  //               },
  //               updatedTimestamp: {
  //                   validators: []
  //               },
  //               createdBy: {
  //                   validators: []
  //               },
  //               updatedBy: {
  //                   validators: []
  //               },
  //               paymentType: {
  //                   validators: []
  //               },
  //               currency: {
  //                   validators: []
  //               },
  //               purchased: {
  //                   validators: []
  //               },
  //               amount: {
  //                   validators: []
  //               },
  //               amountPaidToTheCollector: {
  //                   validators: []
  //               },
  //               totalPaid: {
  //                   validators: []
  //               },
  //               stockOrder: {
  //                   validators: []
  //               },
  //               recipientType: {
  //                   validators: []
  //               },
  //               receiptNumber: {
  //                   validators: []
  //               },
  //               receiptDocument: {
  //                   validators: []
  //               },
  //               receiptDocumentType: {
  //                   validators: []
  //               },
  //               paymentPurposeType: {
  //                   validators: []
  //               },
  //               paymentStatus: {
  //                   validators: []
  //               },
  //               paymentConfirmedByUser: {
  //                   validators: []
  //               },
  //               paymentConfirmedAtTime: {
  //                   validators: []
  //               },
  //               formalCreationTime: {
  //                   validators: []
  //               },
  //               preferredWayOfPayment: {
  //                   validators: []
  //               },
  //               productionDate: {
  //                   validators: []
  //               },
  //               payingCompany: {
  //                   validators: []
  //               },
  //               recipientCompany: {
  //                   validators: []
  //               },
  //               recipientUserCustomer: {
  //                   validators: []
  //               },
  //               representativeOfRecipientUserCustomer: {
  //                   validators: []
  //               },
  //     }
  // } as SimpleValidationScheme<ApiPayment>;


}


