/*
 * Copyright(c) 2009 - 2019 Abelium d.o.o.
 * Kajuhova 90, 1000 Ljubljana, Slovenia
 * All rights reserved
 * Copyright(c) 1995 - 2018 T-Systems Multimedia Solutions GmbH
 * Riesaer Str. 5, 01129 Dresden
 * All rights reserved.
 *
 * INATrace Services API
 * INATrace Services API OpenAPI documentation
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the openapi-typescript-angular-generator.
 * https://github.com/alenabelium/openapi-typescript-angular-generator
 * Do not edit the class manually.
 */


import { ApiCompany } from './apiCompany';
import { ApiFacility } from './apiFacility';
import { ApiFinalProduct } from './apiFinalProduct';
import { ApiMeasureUnitType } from './apiMeasureUnitType';
import { ApiSemiProduct } from './apiSemiProduct';
import { ApiStockOrder } from './apiStockOrder';



export interface ApiTransaction { 
    /**
     * Entity id
     */
    id?: number;
    company?: ApiCompany;
    /**
     * Initiator user ID
     */
    initiationUserId?: number;
    sourceStockOrder?: ApiStockOrder;
    targetStockOrder?: ApiStockOrder;
    semiProduct?: ApiSemiProduct;
    finalProduct?: ApiFinalProduct;
    sourceFacility?: ApiFacility;
    /**
     * Is order of type processing
     */
    isProcessing?: boolean;
    /**
     * Transaction status
     */
    status?: ApiTransaction.StatusEnum;
    /**
     * Shipment ID
     */
    shipmentId?: number;
    inputMeasureUnitType?: ApiMeasureUnitType;
    /**
     * Input quantity
     */
    inputQuantity?: number;
    /**
     * Output quantity
     */
    outputQuantity?: number;
    /**
     * Price per unit
     */
    pricePerUnit?: number;
    /**
     * Currency
     */
    currency?: string;
    /**
     * Reject comment
     */
    rejectComment?: string;
}

/**
 * Namespace for property- and property-value-enumerations of ApiTransaction.
 */
export namespace ApiTransaction {
    /**
     * All properties of ApiTransaction.
     */
    export enum Properties {
        /**
         * Entity id
         */
        id = 'id',
        company = 'company',
        /**
         * Initiator user ID
         */
        initiationUserId = 'initiationUserId',
        sourceStockOrder = 'sourceStockOrder',
        targetStockOrder = 'targetStockOrder',
        semiProduct = 'semiProduct',
        finalProduct = 'finalProduct',
        sourceFacility = 'sourceFacility',
        /**
         * Is order of type processing
         */
        isProcessing = 'isProcessing',
        /**
         * Transaction status
         */
        status = 'status',
        /**
         * Shipment ID
         */
        shipmentId = 'shipmentId',
        inputMeasureUnitType = 'inputMeasureUnitType',
        /**
         * Input quantity
         */
        inputQuantity = 'inputQuantity',
        /**
         * Output quantity
         */
        outputQuantity = 'outputQuantity',
        /**
         * Price per unit
         */
        pricePerUnit = 'pricePerUnit',
        /**
         * Currency
         */
        currency = 'currency',
        /**
         * Reject comment
         */
        rejectComment = 'rejectComment'
    }

    /**
     * All possible values of status.
     */
    export enum StatusEnum {
        PENDING = 'PENDING',
        CANCELED = 'CANCELED',
        EXECUTED = 'EXECUTED'
    }


    export function formMetadata() {
        return  {
            metadata: formMetadata,
            classname: 'ApiTransaction',
            vars: [
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'id',
                    classname: 'ApiTransaction',
                    dataType: 'number',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    metadata: ApiCompany.formMetadata,
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'company',
                    classname: 'ApiTransaction',
                    dataType: 'ApiCompany',
                    isPrimitiveType: false,
                    isListContainer: false,
                    complexType: 'ApiCompany'
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'initiationUserId',
                    classname: 'ApiTransaction',
                    dataType: 'number',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    metadata: ApiStockOrder.formMetadata,
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'sourceStockOrder',
                    classname: 'ApiTransaction',
                    dataType: 'ApiStockOrder',
                    isPrimitiveType: false,
                    isListContainer: false,
                    complexType: 'ApiStockOrder'
                },
                {
                    metadata: ApiStockOrder.formMetadata,
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'targetStockOrder',
                    classname: 'ApiTransaction',
                    dataType: 'ApiStockOrder',
                    isPrimitiveType: false,
                    isListContainer: false,
                    complexType: 'ApiStockOrder'
                },
                {
                    metadata: ApiSemiProduct.formMetadata,
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'semiProduct',
                    classname: 'ApiTransaction',
                    dataType: 'ApiSemiProduct',
                    isPrimitiveType: false,
                    isListContainer: false,
                    complexType: 'ApiSemiProduct'
                },
                {
                    metadata: ApiFinalProduct.formMetadata,
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'finalProduct',
                    classname: 'ApiTransaction',
                    dataType: 'ApiFinalProduct',
                    isPrimitiveType: false,
                    isListContainer: false,
                    complexType: 'ApiFinalProduct'
                },
                {
                    metadata: ApiFacility.formMetadata,
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'sourceFacility',
                    classname: 'ApiTransaction',
                    dataType: 'ApiFacility',
                    isPrimitiveType: false,
                    isListContainer: false,
                    complexType: 'ApiFacility'
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'isProcessing',
                    classname: 'ApiTransaction',
                    dataType: 'boolean',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: true,
                    datatypeWithEnum: 'ApiTransaction.StatusEnum',
                    required: false,
                    name: 'status',
                    classname: 'ApiTransaction',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'shipmentId',
                    classname: 'ApiTransaction',
                    dataType: 'number',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    metadata: ApiMeasureUnitType.formMetadata,
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'inputMeasureUnitType',
                    classname: 'ApiTransaction',
                    dataType: 'ApiMeasureUnitType',
                    isPrimitiveType: false,
                    isListContainer: false,
                    complexType: 'ApiMeasureUnitType'
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'inputQuantity',
                    classname: 'ApiTransaction',
                    dataType: 'number',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'outputQuantity',
                    classname: 'ApiTransaction',
                    dataType: 'number',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'pricePerUnit',
                    classname: 'ApiTransaction',
                    dataType: 'number',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'currency',
                    classname: 'ApiTransaction',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'rejectComment',
                    classname: 'ApiTransaction',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
            ],
            validators: {
                id: [
                ],
                company: [
                ],
                initiationUserId: [
                ],
                sourceStockOrder: [
                ],
                targetStockOrder: [
                ],
                semiProduct: [
                ],
                finalProduct: [
                ],
                sourceFacility: [
                ],
                isProcessing: [
                ],
                status: [
                ],
                shipmentId: [
                ],
                inputMeasureUnitType: [
                ],
                inputQuantity: [
                ],
                outputQuantity: [
                ],
                pricePerUnit: [
                ],
                currency: [
                ],
                rejectComment: [
                ],
            }
        }
    }

  // export const ApiTransactionValidationScheme = {
  //     validators: [],
  //     fields: {
  //               id: {
  //                   validators: []
  //               },
  //               company: {
  //                   validators: []
  //               },
  //               initiationUserId: {
  //                   validators: []
  //               },
  //               sourceStockOrder: {
  //                   validators: []
  //               },
  //               targetStockOrder: {
  //                   validators: []
  //               },
  //               semiProduct: {
  //                   validators: []
  //               },
  //               finalProduct: {
  //                   validators: []
  //               },
  //               sourceFacility: {
  //                   validators: []
  //               },
  //               isProcessing: {
  //                   validators: []
  //               },
  //               status: {
  //                   validators: []
  //               },
  //               shipmentId: {
  //                   validators: []
  //               },
  //               inputMeasureUnitType: {
  //                   validators: []
  //               },
  //               inputQuantity: {
  //                   validators: []
  //               },
  //               outputQuantity: {
  //                   validators: []
  //               },
  //               pricePerUnit: {
  //                   validators: []
  //               },
  //               currency: {
  //                   validators: []
  //               },
  //               rejectComment: {
  //                   validators: []
  //               },
  //     }
  // } as SimpleValidationScheme<ApiTransaction>;


}


